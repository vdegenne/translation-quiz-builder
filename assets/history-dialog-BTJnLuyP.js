const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./index-CCNRcvqP.js","./index-Xcr6FJoB.js"])))=>i.map(i=>d[i]);
import{J as g,K as h,x as m,r as f,G as l,M as c,O as y,P as v,h as _,b as w,H as O,I as $}from"./index-Xcr6FJoB.js";import{M as x,c as b}from"./index-BF3Adlxx.js";const D="md-dialog{max-width:min(500px,calc(100vw - 24px));width:100%}";function H({headline:t="Are you sure?",content:o="Are you sure to perform this action?"}={}){return function(r,e,i){const a=i.value;return i.value=async function(...s){const{materialConfirm:p}=await g(async()=>{const{materialConfirm:u}=await import("./index-CCNRcvqP.js");return{materialConfirm:u}},__vite__mapDeps([0,1]),import.meta.url);try{await p({headline:t,content:o})}catch{return}return a.apply(this,s)},i}}x.addInitializer(async t=>{await t.updateComplete,t.dialog.prepend(t.scrim),t.scrim.style.inset=0,t.scrim.style.zIndex=-1;const{getOpenAnimation:o,getCloseAnimation:r}=t;t.getOpenAnimation=()=>{const e=o.call(void 0);return e.container=[...e.container,...e.dialog],e.dialog=[],e},t.getCloseAnimation=()=>{const e=r.call(void 0);return e.container=[...e.container,...e.dialog],e.dialog=[],e}});const P=()=>m`<div class="flex items-center justify-center gap-3 m-6"><md-icon>${h}</md-icon><span>Nothing yet :-(</span></div>`;var C=Object.defineProperty,E=Object.getOwnPropertyDescriptor,d=(t,o,r,e)=>{for(var i=e>1?void 0:e?E(o,r):o,a=t.length-1,s;a>=0;a--)(s=t[a])&&(i=(e?s(o,r,i):s(i))||i);return e&&i&&C(o,r,i),i};let n=class extends f{constructor(){super(...arguments),this.open=!1}render(){return m`<md-dialog ?open="${this.open}" @closed="${()=>{this.remove(),this.open=!1}}"><header slot="headline">History</header><form slot="content" method="dialog" id="form">${l.dataHistory.length===0?P():null}<md-list>${[...l.dataHistory].reverse().map(t=>m`<md-list-item href="#${JSON.stringify(t.data)}" target="_blank"><div slot="headline">${Object.values(t.data).slice(0,3).join(" / ")}</div><div slot="end"><md-icon-button @click="${o=>{v(o),c(o),this.deleteHistoryItem(t.hash)}}" @pointerdown="${c}"><md-icon>${y}</md-icon></md-icon-button></div></md-list-item>`)}</md-list></form><div slot="actions"><md-text-button form="form">Close</md-text-button></div></md-dialog>`}deleteHistoryItem(t){l.removeFromHistory(t)}async show(){this.open=!0}close(t){return this.dialog.close(t)}};d([_()],n.prototype,"open",2);d([w("md-dialog")],n.prototype,"dialog",2);d([H()],n.prototype,"deleteHistoryItem",1);n=d([b({name:"history-dialog",inject:!0}),O(D),$(l)],n);const j=new n;export{n as HistoryDialog,j as historyDialog};
